name: PR Build
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        name: Configure PNPM
        with:
          version: 10
      - uses: actions/setup-node@v4
        name: Configure Node
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: ESLint
        run: pnpm run lint:check
      - name: Formatting
        run: pnpm run format:check
      - name: Test
        run: pnpm run test:unit
      # - name: Cache Playwright browsers
      #   uses: actions/cache@v4
      #   id: playwright-cache
      #   with:
      #     path: ~/.cache/ms-playwright
      #     key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-playwright-
      - name: Install Playwright Browsers
        # if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Playwright Tests
        run: pnpm run test:e2e
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
